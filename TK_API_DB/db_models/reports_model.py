"""

MongoDB Database Model for Reports

"""

from mongoengine import Document, StringField, DateTimeField, IntField, ListField

# All models will inherit from the mongoengine Document class

class Reports(Document):
    """
        Names are a list of names:
        If there is only one name in the list, then the reporter is also a VAW survivor/affected individual
        If there are two names in the list, then the first name is the reporter and the second name is the VAW survivor/affected individual
    """
    names = ListField(StringField(max_length=50), required=True)
    # Email of the Person Reporting
    email = StringField(required=True)
    # Description of the Report
    report_body = StringField()

    # Other report details

    # This will be used to identify the report
    # Company ID is a unique identifier for each registered company
    company_id = StringField(required=True)
    date_reported = DateTimeField(required=True)
    time_reported = DateTimeField(required=True)
    status = IntField(required=True) # Reports can be "To Read : 0", "Viewed : 1", "Referred/Reported : 2", "Resolved : 3"

    # Initializing the Report
    def __init__(self, company_id, date_reported, time_reported, names, email, report_body, status, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.report_id = self.generate_id()  # This ID will correspond to the Report ID as generated by MongoDB
        self.company_id = company_id
        self.date_reported = date_reported
        self.time_reported = time_reported
        self.names = names
        self.email = email
        self.report_body = report_body
        self.status = status
    
    # Converting the Report to JSON
    def to_json(self):
        return {
            "report_id": self.generate_id(),
            "company_id": self.company_id,
            "date_reported": self.date_reported,
            "time_reported": self.time_reported,
            "names": self.names,
            "email": self.email,
            "report_body": self.report_body,
            "status": self.status,
        }
    
    # Function to generate an ID for the Company
    def generate_id(self):
        return str(self.id)