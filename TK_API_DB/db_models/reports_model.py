"""

MongoDB Database Model for Reports

"""

from mongoengine import Document, StringField, DateTimeField, IntField

# All models will inherit from the mongoengine Document class

class Report(Document):
    # Name of the Person Reporting
    name = StringField(required=True)
    # Email of the Person Reporting
    email = StringField(required=True)
    # Description of the Report
    report_body = StringField()

    # Other report details

    # This will be used to identify the report
    # Company ID is a unique identifier for each registered company
    company_id = StringField(required=True)
    date_reported = DateTimeField(required=True)
    time_reported = DateTimeField(required=True)
    report_type = IntField(required=True) # Reports can be "Personal : 0" or "In Behalf of Someone Else : 1"
    status = IntField(required=True) # Reports can be "To Read : 0", "Viewed : 1", "Referred/Reported : 2", "Resolved : 3"

    # Initializing the Report
    def __init__(self, company_id, date_reported, time_reported, name, email, report_body, status, report_type, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.report_id = str(self.id)  # This ID will correspond to the Report ID as generated by MongoDB
        self.company_id = company_id
        self.date_reported = date_reported
        self.time_reported = time_reported
        self.name = name
        self.email = email
        self.report_body = report_body
        self.status = status
        self.report_type = report_type
    
    # Converting the Report to JSON
    def to_json(self):
        return {
            "report_id": self.report_id,
            "company_id": self.company_id,
            "date_reported": self.date_reported,
            "time_reported": self.time_reported,
            "name": self.name,
            "email": self.email,
            "report_body": self.report_body,
            "status": self.status,
            "report_type": self.report_type
        }